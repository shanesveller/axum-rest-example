# https://grafana.com/docs/loki/latest/clients/docker-driver/
# docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions

version: '3'

services:
  db:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: fantasy_nerd
      POSTGRES_PASSWORD: postgres
    image: postgres:13-alpine
    depends_on:
      - loki
    ports:
      - "15432:5432"
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'

  app:
    restart: on-failure
    depends_on:
      - db
      - loki
    build: .
    # image: axum-rest-example:latest
    init: true
    environment:
      APP_DATABASE__URL: "postgres://postgres:postgres@db/axum_rest_example"
      APP_ENV: production
      RUST_LOG: axum_rest_example=debug,tower_http=debug,info
    ports:
      - "8080:8080"
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'
    volumes:
      - ./shared/production.toml:/app/config/production.toml:ro

  grafana:
    # https://hub.docker.com/r/grafana/grafana/tags?page=1&ordering=last_updated
    # https://github.com/grafana/grafana/releases/latest
    image: grafana/grafana:8.5.2
    depends_on:
      - loki
    volumes:
      - ./shared/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'

  loki:
    # https://hub.docker.com/r/grafana/loki/tags?page=1&ordering=last_updated
    # https://github.com/grafana/loki/releases/latest
    image: grafana/loki:2.3.0
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'

  prometheus:
    # https://hub.docker.com/r/prom/prometheus/tags?page=1&ordering=last_updated
    # https://github.com/prometheus/prometheus/releases/latest
    image: prom/prometheus:v2.29.2
    command: [ "--config.file=/etc/prometheus.yaml" ]
    depends_on:
      - loki
    volumes:
      - ./shared/prometheus.yaml:/etc/prometheus.yaml:ro
    ports:
      - "9090:9090"
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'

  tempo:
    # https://hub.docker.com/r/grafana/tempo/tags?page=1&ordering=last_updated
    # https://github.com/grafana/tempo/releases/latest
    image: grafana/tempo:1.0.1
    depends_on:
      - loki
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./shared/tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'
